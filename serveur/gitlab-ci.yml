image: maven:3.3.9-jdk-8
# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Maven.gitlab-ci.yml

# Build JAVA applications using Apache Maven (http://maven.apache.org)
# For docker image tags see https://hub.docker.com/_/maven/
#
# For general lifecycle information see https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html

# This template will build and test your projects
# * Caches downloaded dependencies and plugins between invocation.
# * Verify but don't deploy merge requests.
# * Deploy built artifacts from master branch only.

variables:
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: ""
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "-Dmaven.wagon.http.ssl.insecure=true -DskipTests -s settings.xml"
  # GIT_SSL_NO_VERIFY: "1"
  VERSION : 0.0.0

#  KUBERNETES_NAMESPACE_OVERWRITE: "digital-factory"
# This template uses jdk8 for verifying and deploying images

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  key: "$CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME"
  paths:
    - .m2/repository
stages:
  - build
  - deploy


maven-build:
  stage: build
  before_script:
    - echo $CI_COMMIT_BRANCH
  script:
    - mvn $MAVEN_CLI_OPTS clean install 
  artifacts:
    paths:
      - target/*.jar
#    expire_in: 10 mins
  rules:
    - if: '$CI_COMMIT_BRANCH == $VERSION'

docker-build:
  stage: deploy
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  before_script:
    - docker --version
  script:
    - docker build -t $CI_REGISTRY_DTF/ms/socle-api:$VERSION .
    - docker login -u=$CI_REGISTRY_USER -p=$CI_REGISTRY_PASSWORD $CI_REGISTRY_DTF
    - docker push $CI_REGISTRY_DTF/ms/socle-api:$VERSION
  rules:
    - if: '$CI_COMMIT_BRANCH == $VERSION'
